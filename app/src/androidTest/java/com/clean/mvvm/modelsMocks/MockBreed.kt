package com.clean.mvvm.modelsMocks

import com.clean.mvvm.data.models.catData.Breed
import com.clean.mvvm.data.models.catData.BreedWeight


data class MockBreed(
    val adaptability: Int = 23,
    val affectionLevel: Int = 24,
    val altNames: String = "cat",
    val bidability: Int = 1,
    val catFriendly: Int = 10,
    val cfaUrl: String = "https://google.com/",
    val childFriendly: Int = 0,
    val countryCode: String = "91",
    val countryCodes: String = "+91",
    val description: String = "cats breed info",
    val dogFriendly: Int = 1,
    val energyLevel: Int = 30,
    val experimental: Int = 50,
    val grooming: Int = 1,
    val hairless: Int = 0,
    val healthIssues: Int = 9,
    val hypoallergenic: Int = 0,
    val id: String = "ID",
    val indoor: Int = 0,
    val intelligence: Int = 0,
    val lap: Int = 123445,
    val lifeSpan: String = "Small",
    val name: String = "Nice cat",
    val natural: Int = 0,
    val origin: String = "China",
    val rare: Int = 10,
    val referenceImageId: String = "imageID",
    val rex: Int = 0,
    val sheddingLevel: Int = 3,
    val shortLegs: Int = 4,
    val socialNeeds: Int = 5,
    val strangerFriendly: Int = 6,
    val suppressedTail: Int = 7,
    val temperament: String = "cool",
    val vcahospitalsUrl: String = "https://google.com/",
    val vetstreetUrl: String = "https://google.com/",
    val vocalisation: Int = 0,
    val weight: BreedWeight = toResponseCatBreedWeight(MockWeight()),
    val wikipediaUrl: String = "https://google.com/"
)

fun toResponseCatBread(mockBreed: MockBreed): Breed {
    return Breed(
        mockBreed.weight,
        mockBreed.id,
        mockBreed.name,
        mockBreed.cfaUrl,
        mockBreed.vetstreetUrl,
        mockBreed.bidability,
        mockBreed.vcahospitalsUrl,
        mockBreed.temperament,
        mockBreed.origin,
        mockBreed.catFriendly,
        mockBreed.countryCodes,
        mockBreed.countryCode,
        mockBreed.description,
        mockBreed.lifeSpan,
        mockBreed.indoor,
        mockBreed.lap,
        mockBreed.altNames,
        mockBreed.adaptability,
        mockBreed.affectionLevel,
        mockBreed.childFriendly,
        mockBreed.dogFriendly,
        mockBreed.energyLevel,
        mockBreed.grooming,
        mockBreed.healthIssues,
        mockBreed.intelligence,
        mockBreed.sheddingLevel,
        mockBreed.socialNeeds,
        mockBreed.strangerFriendly,
        mockBreed.vocalisation,
        mockBreed.experimental,
        mockBreed.hairless,
        mockBreed.natural,
        mockBreed.rare,
        mockBreed.rex,
        mockBreed.suppressedTail,
        mockBreed.shortLegs,
        mockBreed.wikipediaUrl,
        mockBreed.hypoallergenic,
        mockBreed.referenceImageId
    )

}